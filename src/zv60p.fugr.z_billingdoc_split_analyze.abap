FUNCTION Z_BILLINGDOC_SPLIT_ANALYZE.
*"--------------------------------------------------------------------
*"*"Local Interface:
*"  IMPORTING
*"     REFERENCE(I_HEADER_STRUCTURE) LIKE  DNTAB-TABNAME
*"         DEFAULT 'VBRK'
*"     REFERENCE(I_ITEM_STRUCTURE) LIKE  DNTAB-TABNAME DEFAULT 'VBRP'
*"     REFERENCE(I_PARTNER_STRUCTURE) LIKE  DNTAB-TABNAME
*"         DEFAULT 'VBPA'
*"  TABLES
*"      I_HEADER_F STRUCTURE  VBRKVB
*"      I_HEADER_S STRUCTURE  VBRKVB
*"      I_ITEM_F STRUCTURE  VBRPVB
*"      I_ITEM_S STRUCTURE  VBRPVB
*"      I_PARTNER_F STRUCTURE  VBPAVB
*"      I_PARTNER_S STRUCTURE  VBPAVB
*"      O_ROLE_SPLIT
*"      O_PARTNER_FIELD_SPLIT
*"      O_HEADER_FIELD_SPLIT
*"      O_ITEM_DIFFERENCE
*"--------------------------------------------------------------------
  DATA : LT_HEADER_F  LIKE I_HEADER_F  OCCURS 0.
  DATA : LT_HEADER_S  LIKE I_HEADER_S  OCCURS 0.
  DATA : LT_ITEM_F    LIKE I_ITEM_F    OCCURS 0.
  DATA : LT_ITEM_S    LIKE I_ITEM_S    OCCURS 0.
  DATA : LT_PARTNER_F LIKE I_PARTNER_F OCCURS 0.
  DATA : LT_PARTNER_S LIKE I_PARTNER_S OCCURS 0.
  DATA : LS_HEADER_F  LIKE I_HEADER_F          .
  DATA : LS_HEADER_S  LIKE I_HEADER_S          .
  DATA : LS_PARTNER_F LIKE I_PARTNER_F         .
  DATA : LS_PARTNER_S LIKE I_PARTNER_S         .
  DATA: BEGIN OF LT_ROLE_SPLIT OCCURS 2,
          VBELN LIKE VBPA-KUNNR,
          PARVW LIKE VBPA-PARVW,
          VTEXT LIKE TPART-VTEXT,
        END OF LT_ROLE_SPLIT.

  DATA: BEGIN OF LT_PARTNER_FIELD_SPLIT OCCURS 2,
          VBELN_F LIKE VBPA-VBELN,
          VBELN_S LIKE VBPA-VBELN,
          PARVW   LIKE VBPA-PARVW,
          FIELD   LIKE DNTAB-FIELDTEXT,
          VALUE_F(20),
          VALUE_S(20),
        END OF LT_PARTNER_FIELD_SPLIT.

  DATA: BEGIN OF LT_HEADER_FIELD_SPLIT OCCURS 2,
          VBELN_F LIKE VBPA-VBELN,
          VBELN_S LIKE VBPA-VBELN,
          FIELD   LIKE DNTAB-FIELDTEXT,
          VALUE_F(20),
          VALUE_S(20),
        END OF LT_HEADER_FIELD_SPLIT.

  DATA: BEGIN OF LT_ITEM_DIFFERENCE OCCURS 2,
          VBELN_F LIKE VBRP-VBELN,
          POSNR_F LIKE VBRP-POSNR,
          VBELN_S LIKE VBRP-VBELN,
          POSNR_S LIKE VBRP-POSNR,
          FIELD   LIKE DNTAB-FIELDTEXT,
          VALUE_F(20),
          VALUE_S(20),
        END OF LT_ITEM_DIFFERENCE.

  LT_HEADER_F[]  =  I_HEADER_F[].
  LT_HEADER_S[]  =  I_HEADER_S[].
  LT_ITEM_F[]    =  I_ITEM_F[].
  LT_ITEM_S[]    =  I_ITEM_S[].
  LT_PARTNER_F[] =  I_PARTNER_F[].
  LT_PARTNER_S[] =  I_PARTNER_S[].

  REFRESH O_ROLE_SPLIT.
  REFRESH O_PARTNER_FIELD_SPLIT.
  REFRESH O_HEADER_FIELD_SPLIT.
  REFRESH O_ITEM_DIFFERENCE.

  LOOP AT LT_HEADER_F INTO LS_HEADER_F.
    READ TABLE LT_HEADER_S INTO LS_HEADER_S INDEX SY-TABIX.
    IF SY-SUBRC IS INITIAL.
      LD_KEY_F = LS_HEADER_F-VBELN.
      LD_KEY_S = LS_HEADER_S-VBELN.
      REFRESH LT_ROLE_SPLIT.
      REFRESH LT_PARTNER_FIELD_SPLIT.
      REFRESH LT_HEADER_FIELD_SPLIT.
      REFRESH LT_ITEM_DIFFERENCE.
      PERFORM ANALYZE_SPLIT
         TABLES
           LT_PARTNER_F
           LT_PARTNER_S
           LT_ITEM_F
           LT_ITEM_S
           LT_ROLE_SPLIT
           LT_PARTNER_FIELD_SPLIT
           LT_HEADER_FIELD_SPLIT
           LT_ITEM_DIFFERENCE
         USING
           I_HEADER_STRUCTURE
           I_ITEM_STRUCTURE
           I_PARTNER_STRUCTURE
           LD_KEY_F
           LD_KEY_S
           LS_HEADER_F
           LS_HEADER_S.
      IF NOT LT_HEADER_FIELD_SPLIT[] IS INITIAL.
        APPEND LINES OF LT_HEADER_FIELD_SPLIT TO O_HEADER_FIELD_SPLIT.
      ENDIF.
      IF NOT LT_ITEM_DIFFERENCE[] IS INITIAL.
        APPEND LINES OF LT_ITEM_DIFFERENCE TO O_ITEM_DIFFERENCE.
      ENDIF.
      IF NOT LT_PARTNER_FIELD_SPLIT[] IS INITIAL.
        APPEND LINES OF LT_PARTNER_FIELD_SPLIT TO O_PARTNER_FIELD_SPLIT.
      ENDIF.
      IF NOT LT_ROLE_SPLIT[] IS INITIAL.
        APPEND LINES OF LT_ROLE_SPLIT TO O_ROLE_SPLIT.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDFUNCTION.
*&---------------------------------------------------------------------*
*&      Form  ANALYZE_SPLIT
*&---------------------------------------------------------------------*
FORM ANALYZE_SPLIT
  TABLES
    LT_PARTNER_F           STRUCTURE VBPAVB
    LT_PARTNER_S           STRUCTURE VBPAVB
    LT_ITEM_F              STRUCTURE VBRPVB
    LT_ITEM_S              STRUCTURE VBRPVB
    LT_ROLE_SPLIT          STRUCTURE LT_ROLE_SPLIT
    LT_PARTNER_FIELD_SPLIT STRUCTURE GT_PAR_FIELD_SPLIT
    LT_HEADER_FIELD_SPLIT  STRUCTURE GT_HEADER_FIELD_SPLIT
    LT_ITEM_DIFFERENCE     STRUCTURE GT_ITEM_INFO
  USING
    LD_HEADER_STRUCTURE    LIKE DNTAB-TABNAME
    LD_ITEM_STRUCTURE      LIKE DNTAB-TABNAME
    LD_PARTNER_STRUCTURE   LIKE DNTAB-TABNAME
    LD_KEY_F               LIKE VBRK-VBELN
    LD_KEY_S               LIKE VBRK-VBELN
    LS_HEADER_F            LIKE VBRKVB
    LS_HEADER_S            LIKE VBRKVB.

  FIELD-SYMBOLS: <VALUE1>, <VALUE2>.
  DATA : PAR_F_TABIX LIKE SY-TABIX.
  DATA : PAR_S_TABIX LIKE SY-TABIX.
  DATA: BEGIN OF LT_PAR_NAMETAB OCCURS 2.
          INCLUDE STRUCTURE DNTAB.
  DATA: END   OF LT_PAR_NAMETAB.
  DATA: BEGIN OF GT_HEADER_NAMETAB OCCURS 2.
          INCLUDE STRUCTURE DNTAB.
  DATA: END   OF GT_HEADER_NAMETAB.

  DATA: BEGIN OF GT_ITEM_NAMETAB OCCURS 2.
          INCLUDE STRUCTURE DNTAB.
  DATA: END   OF GT_ITEM_NAMETAB.
  DATA : LS_PARTNER_F LIKE VBPAVB               .
  DATA : LS_PARTNER_S LIKE VBPAVB              .
  DATA : LS_ITEM_F LIKE VBRPVB               .
  DATA : LS_ITEM_S LIKE VBRPVB              .

  LOOP AT LT_PARTNER_F INTO LS_PARTNER_F WHERE VBELN = LD_KEY_F.
    PAR_F_TABIX = SY-TABIX.
    READ TABLE LT_PARTNER_S WITH KEY VBELN = LD_KEY_S
                                     POSNR = LS_PARTNER_F-POSNR
                                     PARVW = LS_PARTNER_F-PARVW.
    IF NOT SY-SUBRC IS INITIAL.
      MOVE-CORRESPONDING LS_PARTNER_F TO LT_ROLE_SPLIT.
*      APPEND LT_PARTNER_F TO LT_ROLE_SPLIT.
      DELETE LT_PARTNER_F INDEX PAR_F_TABIX.
    ENDIF.
  ENDLOOP.
  LOOP AT LT_PARTNER_S INTO LS_PARTNER_S WHERE VBELN = LD_KEY_S.
    PAR_S_TABIX = SY-TABIX.
    READ TABLE LT_PARTNER_F WITH KEY VBELN = LD_KEY_F
                                     POSNR = LS_PARTNER_S-POSNR
                                 PARVW = LS_PARTNER_S-PARVW.
    IF NOT SY-SUBRC IS INITIAL.
      MOVE-CORRESPONDING LS_PARTNER_S TO LT_ROLE_SPLIT.
*      APPEND LT_PARTNER_S TO LT_ROLE_SPLIT.
      DELETE LT_PARTNER_S INDEX PAR_S_TABIX.
    ENDIF.
  ENDLOOP.

  READ TABLE LT_ROLE_SPLIT INDEX 1.
  IF SY-SUBRC IS INITIAL.
    LOOP AT LT_ROLE_SPLIT.
      SELECT SINGLE * FROM TPART
                 WHERE SPRAS = SY-LANGU AND PARVW = LT_ROLE_SPLIT-PARVW.
      IF SY-SUBRC IS INITIAL.
        LT_ROLE_SPLIT-VTEXT = TPART-VTEXT.
        MODIFY LT_ROLE_SPLIT.
      ENDIF.
    ENDLOOP.
  ENDIF.
  CALL FUNCTION 'NAMETAB_GET'
       EXPORTING
            LANGU               = SY-LANGU
            TABNAME             = LD_PARTNER_STRUCTURE
       TABLES
            NAMETAB             = LT_PAR_NAMETAB
       EXCEPTIONS
            INTERNAL_ERROR      = 01
            NO_TEXTS_FOUND      = 02
            TABLE_HAS_NO_FIELDS = 03
            TABLE_NOT_ACTIV     = 04.

  LOOP AT LT_PARTNER_F INTO LS_PARTNER_F WHERE VBELN = LD_KEY_F.
    READ TABLE LT_PARTNER_S INTO LS_PARTNER_S
                            WITH KEY VBELN = LD_KEY_S
                                     POSNR = LS_PARTNER_F-POSNR
                                 PARVW = LS_PARTNER_F-PARVW.

    SY-SUBRC = 0.
    WHILE SY-SUBRC = 0.
      ASSIGN COMPONENT SY-INDEX OF STRUCTURE LS_PARTNER_F TO <VALUE1>.
      CHECK : SY-SUBRC = 0.
      ASSIGN COMPONENT SY-INDEX OF STRUCTURE LS_PARTNER_S TO <VALUE2>.
      IF <VALUE1> NE <VALUE2>.
        READ TABLE LT_PAR_NAMETAB INDEX SY-INDEX.
        CHECK : SY-SUBRC = 0.
        IF PAR_AUSNAHME_TAB        NS LT_PAR_NAMETAB-FIELDNAME.
          LT_PARTNER_FIELD_SPLIT-VBELN_F  = LS_PARTNER_F-VBELN.
          LT_PARTNER_FIELD_SPLIT-VBELN_S  = LS_PARTNER_S-VBELN.
          LT_PARTNER_FIELD_SPLIT-PARVW    = LS_PARTNER_F-PARVW.
          LT_PARTNER_FIELD_SPLIT-FIELD    = LT_PAR_NAMETAB-FIELDTEXT.
          LT_PARTNER_FIELD_SPLIT-VALUE_F  = <VALUE1>.
          LT_PARTNER_FIELD_SPLIT-VALUE_S  = <VALUE2>.
          APPEND LT_PARTNER_FIELD_SPLIT.
        ENDIF.
      ENDIF.
    ENDWHILE.
  ENDLOOP.

  READ TABLE LT_PARTNER_FIELD_SPLIT INDEX 1.
  IF SY-SUBRC IS INITIAL.
    SORT LT_PARTNER_FIELD_SPLIT BY VBELN_F VBELN_S PARVW.
  ENDIF.

  CALL FUNCTION 'NAMETAB_GET'
       EXPORTING
            LANGU               = SY-LANGU
            TABNAME             = LD_HEADER_STRUCTURE
       TABLES
            NAMETAB             = GT_HEADER_NAMETAB
       EXCEPTIONS
            INTERNAL_ERROR      = 01
            NO_TEXTS_FOUND      = 02
            TABLE_HAS_NO_FIELDS = 03
            TABLE_NOT_ACTIV     = 04.

  SY-SUBRC = 0.
  WHILE SY-SUBRC = 0.
    ASSIGN COMPONENT SY-INDEX OF STRUCTURE LS_HEADER_F TO <VALUE1>.
    CHECK : SY-SUBRC = 0.
    ASSIGN COMPONENT SY-INDEX OF STRUCTURE LS_HEADER_S TO <VALUE2>.
    IF <VALUE1> NE <VALUE2>.
      READ TABLE GT_HEADER_NAMETAB INDEX SY-INDEX.
      CHECK : SY-SUBRC = 0.
      IF VBRK_AUSNAHME_TAB         NS GT_HEADER_NAMETAB-FIELDNAME.
*      IF GT_HEADER_NAMETAB-FIELDNAME ns VBRK_AUSNAHME_TAB .
        LT_HEADER_FIELD_SPLIT-VBELN_F  = LS_HEADER_F-VBELN.
        LT_HEADER_FIELD_SPLIT-VBELN_S  = LS_HEADER_S-VBELN.
        LT_HEADER_FIELD_SPLIT-FIELD    = GT_HEADER_NAMETAB-FIELDTEXT.
        LT_HEADER_FIELD_SPLIT-VALUE_F  = <VALUE1>.
        LT_HEADER_FIELD_SPLIT-VALUE_S  = <VALUE2>.
        APPEND LT_HEADER_FIELD_SPLIT.
      ENDIF.
    ENDIF.
  ENDWHILE.

  CALL FUNCTION 'NAMETAB_GET'
       EXPORTING
            LANGU               = SY-LANGU
            TABNAME             = LD_ITEM_STRUCTURE
       TABLES
            NAMETAB             = GT_ITEM_NAMETAB
       EXCEPTIONS
            INTERNAL_ERROR      = 01
            NO_TEXTS_FOUND      = 02
            TABLE_HAS_NO_FIELDS = 03
            TABLE_NOT_ACTIV     = 04.

  LOOP AT LT_ITEM_F INTO LS_ITEM_F WHERE VBELN = LD_KEY_F.
    READ TABLE LT_ITEM_S INTO LS_ITEM_S INDEX SY-TABIX.
    IF SY-SUBRC IS INITIAL.
      SY-SUBRC = 0.
      WHILE SY-SUBRC = 0.
        ASSIGN COMPONENT SY-INDEX OF STRUCTURE LS_ITEM_F TO <VALUE1>.
        CHECK : SY-SUBRC = 0.
        ASSIGN COMPONENT SY-INDEX OF STRUCTURE LS_ITEM_S TO <VALUE2>.
        IF <VALUE1> NE <VALUE2>.
          READ TABLE GT_ITEM_NAMETAB INDEX SY-INDEX.
          CHECK : SY-SUBRC = 0.
          IF VBRK_AUSNAHME_TAB         NS GT_HEADER_NAMETAB-FIELDNAME.
            LT_ITEM_DIFFERENCE-VBELN_F  = LS_ITEM_F-VBELN.
            LT_ITEM_DIFFERENCE-POSNR_F  = LS_ITEM_F-POSNR.
            LT_ITEM_DIFFERENCE-VBELN_S  = LS_ITEM_S-VBELN.
            LT_ITEM_DIFFERENCE-POSNR_S  = LS_ITEM_S-POSNR.
            LT_ITEM_DIFFERENCE-FIELD    = GT_ITEM_NAMETAB-FIELDTEXT.
            LT_ITEM_DIFFERENCE-VALUE_F  = <VALUE1>.
            LT_ITEM_DIFFERENCE-VALUE_S  = <VALUE2>.
            APPEND LT_ITEM_DIFFERENCE.
          ENDIF.
        ENDIF.
      ENDWHILE.
    ENDIF.
  ENDLOOP.

ENDFORM.
