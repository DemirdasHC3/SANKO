FUNCTION Z_GN_COLLECTIVE_RUN_EXECUTE.
*"--------------------------------------------------------------------
*"*"Global Interface:
*"  IMPORTING
*"     VALUE(V60P_INPUT_RV60A) LIKE  RV60A STRUCTURE  RV60A
*"     VALUE(V60P_INPUT_SMART) LIKE  VBSK-SMART DEFAULT 'F'
*"     VALUE(V60P_INPUT_SAMMG) LIKE  VBSK-SAMMG OPTIONAL
*"     VALUE(ID_UTASY) DEFAULT ' '
*"     VALUE(ID_UTSWL) DEFAULT ' '
*"     VALUE(ID_UTSNL) DEFAULT ' '
*"     VALUE(ID_NO_NEW_RUN) DEFAULT ' '
*"     VALUE(ID_INVOICE_LIST) DEFAULT SPACE
*"  EXPORTING
*"     VALUE(V60P_OUTPUT_VBSK) LIKE  VBSK STRUCTURE  VBSK
*"  TABLES
*"      GN_INPUT_VKDFIF STRUCTURE  VKDFIFGN
*"      V60P_OUTPUT_VBFS STRUCTURE  VBFS
*"      V60P_OUTPUT_VBSS STRUCTURE  VBSS
*"--------------------------------------------------------------------
  DATA : MAX_DOCUMENTS LIKE SY-TABIX.
  DATA : COUNTER LIKE SY-TABIX.
  DATA : RCODE(2) TYPE P.
  DATA : XKOMFKGN LIKE KOMFKGN OCCURS 10 WITH HEADER LINE.
  DATA : XVBFS  LIKE VBFS OCCURS 10 WITH HEADER LINE.
  DATA : XVBSS  LIKE VBSS OCCURS 10 WITH HEADER LINE.
  DATA : XVBSK  LIKE VBSK OCCURS 10 WITH HEADER LINE.
  DATA : EPRO_FLAG TYPE C.
  DATA : LD_SAMMG LIKE VBSK-SAMMG.
  DATA : BEGIN OF WA_EXTERNE,
           VBELV  LIKE VBFA-VBELV,
           POSNV  LIKE VBFA-POSNV,
           VBELN  LIKE VBFA-VBELN,
           POSNN  LIKE VBFA-POSNN,
           LOGSYS LIKE VBFA-LOGSYS,
         END OF WA_EXTERNE.
  DATA : LT_EXTERNE LIKE WA_EXTERNE OCCURS 10.
  DATA : LS_VBRP LIKE VBRP,
         LS_VBRK LIKE VBRK.
  DATA : LS_BILLSTAT LIKE ITEMBILLSTATUS.
  DATA : LT_BILLSTAT LIKE ITEMBILLSTATUS OCCURS 10.

  CHECK RCODE = 0.
  MAX_DOCUMENTS = 1000.
  CALL CUSTOMER-FUNCTION '018'
     CHANGING
       CD_MAX_DOCUMENTS = MAX_DOCUMENTS
     EXCEPTIONS
       OTHERS           = 1.

  CLEAR COUNTER.
  REFRESH XKOMFKGN.
  REFRESH XVBFS.
  REFRESH XVBSS.
  CLEAR EPRO_FLAG.
  XVBSK-MANDT = SY-MANDT.
  XVBSK-ERNAM = SY-UNAME.
  XVBSK-ERDAT = SY-DATUM.
  XVBSK-UZEIT = SY-UZEIT.
  XVBSK-SMART = V60P_INPUT_SMART.
  XVBSK-SAMMG = V60P_INPUT_SAMMG.
  SORT GN_INPUT_VKDFIF BY KUNNR VKORG V_FKART V_FKDAT SORTKRI
                          FKDAT FKART VBELN VGBEL_EX.
  CALL CUSTOMER-FUNCTION '019'
     TABLES
       CT_VKDFIF = GN_INPUT_VKDFIF
     EXCEPTIONS
       OTHERS    = 1.

  LOOP AT GN_INPUT_VKDFIF WHERE SELKZ NE SPACE.
    ON CHANGE OF GN_INPUT_VKDFIF-KUNNR OR
                 GN_INPUT_VKDFIF-VKORG OR
                 GN_INPUT_VKDFIF-V_FKART.
      IF COUNTER > 0.
        CLEAR SY-CALLD.
        PERFORM GN_INVOICE_CREATE
          TABLES
            XKOMFKGN
            XVBFS
            XVBSS
          USING
            V60P_INPUT_RV60A
            ID_UTASY
            ID_UTSWL
            ID_UTSNL
            ID_INVOICE_LIST
          CHANGING
            XVBSK
            LD_SAMMG.
        CLEAR COUNTER.
        REFRESH XKOMFKGN.
      ENDIF.
    ENDON.

    ADD 1 TO COUNTER.
    CLEAR XKOMFKGN.

    IF GN_INPUT_VKDFIF-LOGSYS NE SPACE.
      SELECT VBELV POSNV VBELN POSNN LOGSYS
             FROM VBFA
             INTO CORRESPONDING FIELDS OF TABLE LT_EXTERNE
             WHERE VBELN = GN_INPUT_VKDFIF-VGBEL_EX
             AND   VBELV = GN_INPUT_VKDFIF-VBELN.
*                 AND  WBSTA = 'C'.

      SORT LT_EXTERNE BY LOGSYS VBELN POSNN.
      REFRESH LT_BILLSTAT.
      LOOP AT LT_EXTERNE INTO WA_EXTERNE.
        CLEAR LS_BILLSTAT.
        LS_BILLSTAT-LOGSYS = WA_EXTERNE-LOGSYS.
        LS_BILLSTAT-VBELN  = WA_EXTERNE-VBELN.
        LS_BILLSTAT-POSNR  = WA_EXTERNE-POSNN.
        APPEND LS_BILLSTAT TO LT_BILLSTAT.
      ENDLOOP.

      CALL FUNCTION 'ITEM_BILLING_STATUS_GET'
        TABLES
          IT_BILLSTAT = LT_BILLSTAT
        EXCEPTIONS
          ERROR_01    = 1
          OTHERS      = 2.
      IF SY-SUBRC <> 0.
        REFRESH LT_BILLSTAT.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*         WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
      ENDIF.

      LOOP AT LT_BILLSTAT INTO LS_BILLSTAT
                          WHERE FKSTA = 'A'.
        READ TABLE LT_EXTERNE INTO WA_EXTERNE
                              WITH KEY LOGSYS = LS_BILLSTAT-LOGSYS
                                       VBELN  = LS_BILLSTAT-VBELN
                                       POSNN  = LS_BILLSTAT-POSNR
                              BINARY SEARCH.

        MOVE WA_EXTERNE-POSNV  TO XKOMFKGN-VGPOS.
        MOVE WA_EXTERNE-POSNN  TO XKOMFKGN-VGPOS_EX.
        MOVE WA_EXTERNE-VBELV  TO XKOMFKGN-VGBEL.
        MOVE WA_EXTERNE-VBELN  TO XKOMFKGN-VGBEL_EX.
        MOVE WA_EXTERNE-LOGSYS TO XKOMFKGN-LOGSYS.
        MOVE GN_INPUT_VKDFIF-MANDT TO XKOMFKGN-MANDT.
        MOVE GN_INPUT_VKDFIF-VBTYP TO XKOMFKGN-VGTYP.
        MOVE GN_INPUT_VKDFIF-FKDAT TO XKOMFKGN-ERDAT.
        MOVE GN_INPUT_VKDFIF-FKART TO XKOMFKGN-FKARA.
        APPEND XKOMFKGN.
      ENDLOOP.
    ELSE.
      MOVE GN_INPUT_VKDFIF-MANDT TO XKOMFKGN-MANDT.
      MOVE GN_INPUT_VKDFIF-VBELN TO XKOMFKGN-VGBEL.
      MOVE GN_INPUT_VKDFIF-VBTYP TO XKOMFKGN-VGTYP.
      MOVE GN_INPUT_VKDFIF-FKDAT TO XKOMFKGN-ERDAT.
      MOVE GN_INPUT_VKDFIF-FKART TO XKOMFKGN-FKARA.
      APPEND XKOMFKGN.
    ENDIF.

    IF COUNTER > MAX_DOCUMENTS.        "maximale Anzahl Belege
      CLEAR SY-CALLD.
      PERFORM GN_INVOICE_CREATE
        TABLES
          XKOMFKGN
          XVBFS
          XVBSS
        USING
          V60P_INPUT_RV60A
          ID_UTASY
          ID_UTSWL
          ID_UTSNL
          ID_INVOICE_LIST
        CHANGING
          XVBSK
          LD_SAMMG.
      CLEAR COUNTER.
      REFRESH XKOMFKGN.
    ENDIF.
  ENDLOOP.

  IF COUNTER <> 0.
    CLEAR SY-CALLD.
    PERFORM GN_INVOICE_CREATE
              TABLES
                XKOMFKGN
                XVBFS
                XVBSS
              USING
                V60P_INPUT_RV60A
                ID_UTASY
                ID_UTSWL
                ID_UTSNL
                ID_INVOICE_LIST
              CHANGING
                XVBSK
                LD_SAMMG.
    CLEAR COUNTER.
    REFRESH XKOMFKGN.
  ENDIF.

  REFRESH V60P_OUTPUT_VBFS.
  REFRESH V60P_OUTPUT_VBSS.
  V60P_OUTPUT_VBFS[] = XVBFS[].
  V60P_OUTPUT_VBSS[] = XVBSS[].
  V60P_OUTPUT_VBSK   = XVBSK.

ENDFUNCTION.
*&---------------------------------------------------------------------*
*&      Form  GN_INVOICE_CREATE
*&---------------------------------------------------------------------*
*       text
*----------------------------------------------------------------------*
*  -->  p1        text
*  <--  p2        text
*----------------------------------------------------------------------*
FORM GN_INVOICE_CREATE
       TABLES
         XKOMFKGN STRUCTURE KOMFKGN
         XVBFS    STRUCTURE VBFS
         XVBSS    STRUCTURE VBSS
       USING
         GD_DEFAULT_DATA LIKE RV60A
         ID_UTASY
         ID_UTSWL
         ID_UTSNL
         ID_INVOICE_LIST
       CHANGING
         XVBSK    LIKE VBSK
         LD_SAMMG LIKE VBSK-SAMMG.

  DATA : YVBFS LIKE VBFS OCCURS 10 WITH HEADER LINE.
  DATA : YVBSS LIKE VBSS OCCURS 10 WITH HEADER LINE.
  DATA : LD_VBSK LIKE VBSK.
  DATA : XKOMV LIKE KOMV OCCURS 10 WITH HEADER LINE.
  DATA : XTHEAD LIKE THEADVB OCCURS 10 WITH HEADER LINE.
  DATA : XVBPA LIKE VBPAVB OCCURS 10 WITH HEADER LINE.
  DATA : XVBRK LIKE VBRKVB OCCURS 10 WITH HEADER LINE.
  DATA : XVBRL LIKE VBRLVB OCCURS 10 WITH HEADER LINE.
  DATA : XVBRP LIKE VBRPVB OCCURS 10 WITH HEADER LINE.
  DATA : XKOMFKKO LIKE KOMV OCCURS 10 WITH HEADER LINE.


  REFRESH YVBFS.
  REFRESH YVBSS.

  IF ID_NO_NEW_RUN IS INITIAL.
    IF ID_INVOICE_LIST IS INITIAL.
      PERFORM SAMMELGANGSNR_ERMITTELN USING 'F' CHANGING LD_SAMMG.
      XVBSK-SAMMG = LD_SAMMG.
    ELSE.
      PERFORM SAMMELGANGSNR_ERMITTELN USING 'R' CHANGING LD_SAMMG.
      XVBSK-SAMMG = LD_SAMMG.
    ENDIF.
  ENDIF.

  LD_VBSK = XVBSK.

  CALL FUNCTION 'GN_INVOICE_CREATE'
    EXPORTING
      DELIVERY_DATE = GD_DEFAULT_DATA-FBUDA
      INVOICE_DATE  = GD_DEFAULT_DATA-FKDAT
      INVOICE_TYPE  = GD_DEFAULT_DATA-FKART
      PRICING_DATE  = GD_DEFAULT_DATA-PRSDT
      VBSK_I        = XVBSK
      WITH_POSTING  = 'B'
      ID_NO_DIALOG  = 'X'
    IMPORTING
      VBSK_E        = XVBSK
    TABLES
      XKOMFK        = XKOMFK
      XKOMFKGN      = XKOMFKGN
      XKOMFKKO      = XKOMFKKO
*     XKOMFKTX      =
      XKOMV         = XKOMV
      XTHEAD        = XTHEAD
      XVBFS         = YVBFS
      XVBPA         = XVBPA
      XVBRK         = XVBRK
      XVBRP         = XVBRP
      XVBSS         = YVBSS.

  LOOP AT YVBFS.
    XVBFS = YVBFS.
    APPEND XVBFS.
  ENDLOOP.
  LOOP AT YVBSS.
    XVBSS = YVBSS.
    APPEND XVBSS.
  ENDLOOP.
  ADD LD_VBSK-VBNUM TO XVBSK-VBNUM.
  ADD LD_VBSK-ERNUM TO XVBSK-ERNUM.
  COMMIT WORK.

ENDFORM.                               " GN_INVOICE_CREATE
